<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>

/*************************************************************
THIS FILE WAS AUTOMATICALLY GENERATED, DO NOT MODIFY MANUALLY
**************************************************************/

import type {
<# foreach (var type in Types.Where(t => Util.HasCtor(t) && Util.GetTSNamespace(t) == "")) { #>
    <#= Util.GetNativePropsName(type) #>,
<# } #>
} from './Props';

<# foreach (var ns in Types.Where(t => Util.HasCtor(t) && Util.GetTSNamespace(t) != "").Select(t => Util.GetTSNamespace(t)).Distinct()) { #>
import type { Native<#= ns #> } from './Props';
<# } #>

import React from 'react';
import { NativeXamlControl } from './NativeXamlControl';


<# 
foreach (var type in Types.Where(t => Util.HasCtor(t))) { 
var ns = Util.GetTSNamespace(type);
if (ns != "") { #>
export namespace <#= ns #> {
<# } #>
export type <#= Util.ToJsName(type) #>Props = Omit<<#= Util.GetNativePropsName(type) #>, 'type'>;

export const <#= Util.ToJsName(type) #>: React.FC<<#= Util.ToJsName(type) #>Props> = (props: <#= Util.ToJsName(type) #>Props) => {
    return (
        <NativeXamlControl type="<#= type.GetFullName() #>" {...props} />
    );
};
<# if (ns != "") { #>
}
<# } #>
<# } #>
