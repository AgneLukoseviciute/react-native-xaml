#include "pch.h"
#include "XamlMetadata.h"

/*************************************************************
THIS FILE WAS AUTOMATICALLY GENERATED, DO NOT MODIFY MANUALLY
**************************************************************/

#include <winrt/Windows.UI.Xaml.Controls.h>
#include <winrt/Windows.UI.Xaml.Controls.Maps.h>
#include <winrt/Windows.UI.Xaml.Controls.Primitives.h>
#include <winrt/Windows.UI.Xaml.Documents.h>
#include <winrt/Windows.UI.Xaml.Shapes.h>

#define MAKE_GET_DP(type, prop) IsType<type>, []() { return type::prop(); }

void XamlMetadata::InitPropertiesMap() {
//   { "width", { MAKE_GET_DP(FrameworkElement, WidthProperty), ViewManagerPropertyType::Double, XamlPropType::Double }},
  xamlPropertyMap = {
        { "acceptsReturn", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBox, AcceptsReturnProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "acceptsReturn", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichEditBox, AcceptsReturnProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "actualStereo3DVideoPackingMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaElement, ActualStereo3DVideoPackingModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Stereo3DVideoPackingMode>, ViewManagerPropertyType::String }},
        { "alwaysShowHeader", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::NavigationView, AlwaysShowHeaderProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "areCandidatesEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::HandwritingView, AreCandidatesEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "areScrollSnapPointsRegular", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::VirtualizingStackPanel, AreScrollSnapPointsRegularProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "areScrollSnapPointsRegular", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::StackPanel, AreScrollSnapPointsRegularProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "areStickyGroupHeadersEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ItemsStackPanel, AreStickyGroupHeadersEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "areStickyGroupHeadersEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ItemsWrapGrid, AreStickyGroupHeadersEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "areTransportControlsEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaPlayerElement, AreTransportControlsEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "areTransportControlsEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaElement, AreTransportControlsEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "aspectRatioHeight", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaElement, AspectRatioHeightProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "aspectRatioWidth", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaElement, AspectRatioWidthProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "audioCategory", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaElement, AudioCategoryProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::AudioCategory>, ViewManagerPropertyType::String }},
        { "audioDeviceType", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaElement, AudioDeviceTypeProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::AudioDeviceType>, ViewManagerPropertyType::String }},
        { "audioStreamCount", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaElement, AudioStreamCountProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "autoMaximizeSuggestionArea", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::AutoSuggestBox, AutoMaximizeSuggestionAreaProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "autoPlay", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaElement, AutoPlayProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "autoPlay", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaPlayerElement, AutoPlayProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "background", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ContentPresenter, BackgroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "background", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Control, BackgroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "background", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Border, BackgroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "background", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Panel, BackgroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "backgroundSizing", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RelativePanel, BackgroundSizingProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::BackgroundSizing>, ViewManagerPropertyType::String }},
        { "backgroundSizing", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Border, BackgroundSizingProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::BackgroundSizing>, ViewManagerPropertyType::String }},
        { "backgroundSizing", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Grid, BackgroundSizingProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::BackgroundSizing>, ViewManagerPropertyType::String }},
        { "backgroundSizing", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Control, BackgroundSizingProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::BackgroundSizing>, ViewManagerPropertyType::String }},
        { "backgroundSizing", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ContentPresenter, BackgroundSizingProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::BackgroundSizing>, ViewManagerPropertyType::String }},
        { "backgroundSizing", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::StackPanel, BackgroundSizingProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::BackgroundSizing>, ViewManagerPropertyType::String }},
        { "backStackDepth", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Frame, BackStackDepthProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "badgeGlyph", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::PersonPicture, BadgeGlyphProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "badgeNumber", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::PersonPicture, BadgeNumberProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "badgeText", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::PersonPicture, BadgeTextProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "balance", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaElement, BalanceProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "blackoutForeground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, BlackoutForegroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "borderBrush", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Border, BorderBrushProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "borderBrush", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Grid, BorderBrushProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "borderBrush", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ContentPresenter, BorderBrushProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "borderBrush", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RelativePanel, BorderBrushProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "borderBrush", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Control, BorderBrushProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "borderBrush", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::StackPanel, BorderBrushProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "bringIntoViewOnFocusChange", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, BringIntoViewOnFocusChangeProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "bufferingProgress", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaElement, BufferingProgressProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "businessLandmarksEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Maps::MapControl, BusinessLandmarksEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "businessLandmarksVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Maps::MapControl, BusinessLandmarksVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "buttonFlyoutPlacement", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::InkToolbar, ButtonFlyoutPlacementProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::InkToolbarButtonFlyoutPlacement>, ViewManagerPropertyType::String }},
        { "cacheLength", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ItemsStackPanel, CacheLengthProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "cacheLength", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ItemsWrapGrid, CacheLengthProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "cacheSize", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Frame, CacheSizeProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "calendarIdentifier", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, CalendarIdentifierProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "calendarIdentifier", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::DatePicker, CalendarIdentifierProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "calendarIdentifier", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarDatePicker, CalendarIdentifierProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "calendarItemBackground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, CalendarItemBackgroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "calendarItemBorderBrush", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, CalendarItemBorderBrushProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "calendarItemForeground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, CalendarItemForegroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "canChangeViews", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::SemanticZoom, CanChangeViewsProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "canContentRenderOutsideBounds", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, CanContentRenderOutsideBoundsProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "canContentRenderOutsideBounds", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollContentPresenter, CanContentRenderOutsideBoundsProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "canDragItems", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ListViewBase, CanDragItemsProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "canDragItems", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TreeView, CanDragItemsProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "canGoBack", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Frame, CanGoBackProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "canGoBack", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::WebView, CanGoBackProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "canGoForward", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::WebView, CanGoForwardProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "canGoForward", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Frame, CanGoForwardProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "canPasteClipboardContent", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::PasswordBox, CanPasteClipboardContentProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "canPasteClipboardContent", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBox, CanPasteClipboardContentProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "canPause", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaElement, CanPauseProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "canRedo", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBox, CanRedoProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "canReorderItems", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ListViewBase, CanReorderItemsProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "canReorderItems", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TreeView, CanReorderItemsProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "canSeek", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaElement, CanSeekProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "canTiltDown", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Maps::MapControl, CanTiltDownProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "canTiltUp", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Maps::MapControl, CanTiltUpProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "canUndo", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBox, CanUndoProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "canZoomIn", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Maps::MapControl, CanZoomInProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "canZoomOut", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Maps::MapControl, CanZoomOutProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "caption", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RatingControl, CaptionProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "characterCasing", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBox, CharacterCasingProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::CharacterCasing>, ViewManagerPropertyType::String }},
        { "characterCasing", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichEditBox, CharacterCasingProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::CharacterCasing>, ViewManagerPropertyType::String }},
        { "characterSpacing", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Control, CharacterSpacingProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "characterSpacing", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ContentPresenter, CharacterSpacingProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "characterSpacing", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichTextBlock, CharacterSpacingProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "characterSpacing", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBlock, CharacterSpacingProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "checkBoxBrush", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ListViewItemPresenter, CheckBoxBrushProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "checkBrush", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::GridViewItemPresenter, CheckBrushProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "checkBrush", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ListViewItemPresenter, CheckBrushProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "checkHintBrush", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ListViewItemPresenter, CheckHintBrushProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "checkHintBrush", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::GridViewItemPresenter, CheckHintBrushProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "checkMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ListViewItemPresenter, CheckModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::Primitives::ListViewItemPresenterCheckMode>, ViewManagerPropertyType::String }},
        { "checkSelectingBrush", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::GridViewItemPresenter, CheckSelectingBrushProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "checkSelectingBrush", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ListViewItemPresenter, CheckSelectingBrushProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "chooseSuggestionOnEnter", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::SearchBox, ChooseSuggestionOnEnterProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "clickMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ButtonBase, ClickModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::ClickMode>, ViewManagerPropertyType::String }},
        { "clipboardCopyFormat", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichEditBox, ClipboardCopyFormatProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::RichEditClipboardFormat>, ViewManagerPropertyType::String }},
        { "clockIdentifier", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TimePicker, ClockIdentifierProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "closeButtonText", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ContentDialog, CloseButtonTextProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "closedDisplayMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::AppBar, ClosedDisplayModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::AppBarClosedDisplayMode>, ViewManagerPropertyType::String }},
        { "collapsedGlyph", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TreeViewItem, CollapsedGlyphProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "colorChannel", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ColorPickerSlider, ColorChannelProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::ColorPickerHsvChannel>, ViewManagerPropertyType::String }},
        { "colorFontPaletteIndex", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Documents::Glyphs, ColorFontPaletteIndexProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "colorScheme", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Maps::MapControl, ColorSchemeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::Maps::MapColorScheme>, ViewManagerPropertyType::String }},
        { "colorSpectrumComponents", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ColorPicker, ColorSpectrumComponentsProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::ColorSpectrumComponents>, ViewManagerPropertyType::String }},
        { "colorSpectrumShape", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ColorPicker, ColorSpectrumShapeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::ColorSpectrumShape>, ViewManagerPropertyType::String }},
        { "columnSpacing", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Grid, ColumnSpacingProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "compactModeThresholdWidth", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::NavigationView, CompactModeThresholdWidthProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "compactPaneLength", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::SplitView, CompactPaneLengthProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "compactPaneLength", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::NavigationView, CompactPaneLengthProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "compactPaneLength", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::NavigationViewItem, CompactPaneLengthProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "components", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ColorSpectrum, ComponentsProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::ColorSpectrumComponents>, ViewManagerPropertyType::String }},
        { "compositionScaleX", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::SwapChainPanel, CompositionScaleXProperty), SetPropValue<float>, ViewManagerPropertyType::Number }},
        { "compositionScaleY", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::SwapChainPanel, CompositionScaleYProperty), SetPropValue<float>, ViewManagerPropertyType::Number }},
        { "computedHorizontalScrollBarVisibility", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, ComputedHorizontalScrollBarVisibilityProperty), SetPropValue<winrt::Windows::UI::Xaml::Visibility>, ViewManagerPropertyType::String }},
        { "computedVerticalScrollBarVisibility", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, ComputedVerticalScrollBarVisibilityProperty), SetPropValue<winrt::Windows::UI::Xaml::Visibility>, ViewManagerPropertyType::String }},
        { "containsFullScreenElement", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::WebView, ContainsFullScreenElementProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "contentLinkBackgroundColor", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichEditBox, ContentLinkBackgroundColorProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::SolidColorBrush>, ViewManagerPropertyType::Color }},
        { "contentLinkForegroundColor", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichEditBox, ContentLinkForegroundColorProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::SolidColorBrush>, ViewManagerPropertyType::Color }},
        { "currentState", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaElement, CurrentStateProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::MediaElementState>, ViewManagerPropertyType::String }},
        { "dataFetchSize", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ListViewBase, DataFetchSizeProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "dateFormat", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarDatePicker, DateFormatProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "dayFormat", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::DatePicker, DayFormatProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "dayItemFontSize", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, DayItemFontSizeProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "dayItemFontStyle", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, DayItemFontStyleProperty), SetPropValue<winrt::Windows::UI::Text::FontStyle>, ViewManagerPropertyType::String }},
        { "dayOfWeekFormat", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarDatePicker, DayOfWeekFormatProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "dayOfWeekFormat", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, DayOfWeekFormatProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "dayVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::DatePicker, DayVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "defaultButton", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ContentDialog, DefaultButtonProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::ContentDialogButton>, ViewManagerPropertyType::String }},
        { "defaultLabelPosition", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CommandBar, DefaultLabelPositionProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::CommandBarDefaultLabelPosition>, ViewManagerPropertyType::String }},
        { "defaultPlaybackRate", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaElement, DefaultPlaybackRateProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "defaultSectionIndex", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Hub, DefaultSectionIndexProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "delay", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::RepeatButton, DelayProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "desiredCandidateWindowAlignment", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichEditBox, DesiredCandidateWindowAlignmentProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::CandidateWindowAlignment>, ViewManagerPropertyType::String }},
        { "desiredCandidateWindowAlignment", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBox, DesiredCandidateWindowAlignmentProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::CandidateWindowAlignment>, ViewManagerPropertyType::String }},
        { "desiredPitch", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Maps::MapControl, DesiredPitchProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "disabledFormattingAccelerators", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichEditBox, DisabledFormattingAcceleratorsProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::DisabledFormattingAccelerators>, ViewManagerPropertyType::String }},
        { "disabledOpacity", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ListViewItemPresenter, DisabledOpacityProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "disabledOpacity", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::GridViewItemPresenter, DisabledOpacityProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "displayMemberPath", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ItemsControl, DisplayMemberPathProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "displayMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, DisplayModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::CalendarViewDisplayMode>, ViewManagerPropertyType::String }},
        { "displayMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::SplitView, DisplayModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::SplitViewDisplayMode>, ViewManagerPropertyType::String }},
        { "displayMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::NavigationView, DisplayModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::NavigationViewDisplayMode>, ViewManagerPropertyType::String }},
        { "displayMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarDatePicker, DisplayModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::CalendarViewDisplayMode>, ViewManagerPropertyType::String }},
        { "displayName", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::PersonPicture, DisplayNameProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "documentTitle", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::WebView, DocumentTitleProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "downloadProgress", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaElement, DownloadProgressProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "downloadProgressOffset", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaElement, DownloadProgressOffsetProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "dragBackground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ListViewItemPresenter, DragBackgroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "dragBackground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::GridViewItemPresenter, DragBackgroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "dragForeground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::GridViewItemPresenter, DragForegroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "dragForeground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ListViewItemPresenter, DragForegroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "dragOpacity", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::GridViewItemPresenter, DragOpacityProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "dragOpacity", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ListViewItemPresenter, DragOpacityProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "dynamicOverflowOrder", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::AppBarSeparator, DynamicOverflowOrderProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "dynamicOverflowOrder", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::AppBarToggleButton, DynamicOverflowOrderProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "dynamicOverflowOrder", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::AppBarElementContainer, DynamicOverflowOrderProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "dynamicOverflowOrder", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::AppBarButton, DynamicOverflowOrderProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "elementSoundMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Control, ElementSoundModeProperty), SetPropValue<winrt::Windows::UI::Xaml::ElementSoundMode>, ViewManagerPropertyType::String }},
        { "expandedGlyph", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TreeViewItem, ExpandedGlyphProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "expandedModeThresholdWidth", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::NavigationView, ExpandedModeThresholdWidthProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "extentHeight", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, ExtentHeightProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "extentWidth", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, ExtentWidthProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "fastPlayFallbackBehaviour", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaTransportControls, FastPlayFallbackBehaviourProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::FastPlayFallbackBehaviour>, ViewManagerPropertyType::String }},
        { "fill", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Documents::Glyphs, FillProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "fill", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::TickBar, FillProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "fill", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Shapes::Shape, FillProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "fillRule", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Shapes::Polygon, FillRuleProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::FillRule>, ViewManagerPropertyType::String }},
        { "fillRule", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Shapes::Polyline, FillRuleProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::FillRule>, ViewManagerPropertyType::String }},
        { "firstDayOfWeek", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarDatePicker, FirstDayOfWeekProperty), SetPropValue<winrt::Windows::Globalization::DayOfWeek>, ViewManagerPropertyType::String }},
        { "firstDayOfWeek", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, FirstDayOfWeekProperty), SetPropValue<winrt::Windows::Globalization::DayOfWeek>, ViewManagerPropertyType::String }},
        { "firstOfMonthLabelFontSize", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, FirstOfMonthLabelFontSizeProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "firstOfMonthLabelFontStyle", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, FirstOfMonthLabelFontStyleProperty), SetPropValue<winrt::Windows::UI::Text::FontStyle>, ViewManagerPropertyType::String }},
        { "firstOfYearDecadeLabelFontSize", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, FirstOfYearDecadeLabelFontSizeProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "firstOfYearDecadeLabelFontStyle", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, FirstOfYearDecadeLabelFontStyleProperty), SetPropValue<winrt::Windows::UI::Text::FontStyle>, ViewManagerPropertyType::String }},
        { "focusBorderBrush", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ListViewItemPresenter, FocusBorderBrushProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "focusBorderBrush", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::GridViewItemPresenter, FocusBorderBrushProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "focusBorderBrush", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, FocusBorderBrushProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "focusOnKeyboardInput", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::SearchBox, FocusOnKeyboardInputProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "focusSecondaryBorderBrush", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ListViewItemPresenter, FocusSecondaryBorderBrushProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "focusState", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Control, FocusStateProperty), SetPropValue<winrt::Windows::UI::Xaml::FocusState>, ViewManagerPropertyType::String }},
        { "fontRenderingEmSize", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Documents::Glyphs, FontRenderingEmSizeProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "fontSize", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBlock, FontSizeProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "fontSize", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Control, FontSizeProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "fontSize", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::FontIcon, FontSizeProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "fontSize", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichTextBlock, FontSizeProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "fontSize", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ContentPresenter, FontSizeProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "fontStretch", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Control, FontStretchProperty), SetPropValue<winrt::Windows::UI::Text::FontStretch>, ViewManagerPropertyType::String }},
        { "fontStretch", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBlock, FontStretchProperty), SetPropValue<winrt::Windows::UI::Text::FontStretch>, ViewManagerPropertyType::String }},
        { "fontStretch", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ContentPresenter, FontStretchProperty), SetPropValue<winrt::Windows::UI::Text::FontStretch>, ViewManagerPropertyType::String }},
        { "fontStretch", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichTextBlock, FontStretchProperty), SetPropValue<winrt::Windows::UI::Text::FontStretch>, ViewManagerPropertyType::String }},
        { "fontStyle", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ContentPresenter, FontStyleProperty), SetPropValue<winrt::Windows::UI::Text::FontStyle>, ViewManagerPropertyType::String }},
        { "fontStyle", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBlock, FontStyleProperty), SetPropValue<winrt::Windows::UI::Text::FontStyle>, ViewManagerPropertyType::String }},
        { "fontStyle", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Control, FontStyleProperty), SetPropValue<winrt::Windows::UI::Text::FontStyle>, ViewManagerPropertyType::String }},
        { "fontStyle", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichTextBlock, FontStyleProperty), SetPropValue<winrt::Windows::UI::Text::FontStyle>, ViewManagerPropertyType::String }},
        { "fontStyle", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::FontIcon, FontStyleProperty), SetPropValue<winrt::Windows::UI::Text::FontStyle>, ViewManagerPropertyType::String }},
        { "foreground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Control, ForegroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "foreground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichTextBlock, ForegroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "foreground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ContentPresenter, ForegroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "foreground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::IconElement, ForegroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "foreground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBlock, ForegroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "fullSizeDesired", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ContentDialog, FullSizeDesiredProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "glyph", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::FontIcon, GlyphProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "glyphBrush", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TreeViewItem, GlyphBrushProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "glyphOpacity", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TreeViewItem, GlyphOpacityProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "glyphSize", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TreeViewItem, GlyphSizeProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "gridViewItemPresenterHorizontalContentAlignment", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::GridViewItemPresenter, GridViewItemPresenterHorizontalContentAlignmentProperty), SetPropValue<winrt::Windows::UI::Xaml::HorizontalAlignment>, ViewManagerPropertyType::String }},
        { "gridViewItemPresenterVerticalContentAlignment", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::GridViewItemPresenter, GridViewItemPresenterVerticalContentAlignmentProperty), SetPropValue<winrt::Windows::UI::Xaml::VerticalAlignment>, ViewManagerPropertyType::String }},
        { "groupHeaderPlacement", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ItemsStackPanel, GroupHeaderPlacementProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::Primitives::GroupHeaderPlacement>, ViewManagerPropertyType::String }},
        { "groupHeaderPlacement", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ItemsWrapGrid, GroupHeaderPlacementProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::Primitives::GroupHeaderPlacement>, ViewManagerPropertyType::String }},
        { "groupName", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RadioButton, GroupNameProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "hasOverflowContent", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichTextBlock, HasOverflowContentProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "hasOverflowContent", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichTextBlockOverflow, HasOverflowContentProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "hasUnrealizedChildren", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TreeViewItem, HasUnrealizedChildrenProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "headerBackground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::SettingsFlyout, HeaderBackgroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "headerFocusVisualPlacement", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Pivot, HeaderFocusVisualPlacementProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::PivotHeaderFocusVisualPlacement>, ViewManagerPropertyType::String }},
        { "headerForeground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::SettingsFlyout, HeaderForegroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "heading", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Maps::MapControl, HeadingProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "horizontalAnchorRatio", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, HorizontalAnchorRatioProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "horizontalChildrenAlignment", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::WrapGrid, HorizontalChildrenAlignmentProperty), SetPropValue<winrt::Windows::UI::Xaml::HorizontalAlignment>, ViewManagerPropertyType::String }},
        { "horizontalChildrenAlignment", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::VariableSizedWrapGrid, HorizontalChildrenAlignmentProperty), SetPropValue<winrt::Windows::UI::Xaml::HorizontalAlignment>, ViewManagerPropertyType::String }},
        { "horizontalContentAlignment", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ContentPresenter, HorizontalContentAlignmentProperty), SetPropValue<winrt::Windows::UI::Xaml::HorizontalAlignment>, ViewManagerPropertyType::String }},
        { "horizontalContentAlignment", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Control, HorizontalContentAlignmentProperty), SetPropValue<winrt::Windows::UI::Xaml::HorizontalAlignment>, ViewManagerPropertyType::String }},
        { "horizontalDayItemAlignment", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, HorizontalDayItemAlignmentProperty), SetPropValue<winrt::Windows::UI::Xaml::HorizontalAlignment>, ViewManagerPropertyType::String }},
        { "horizontalFirstOfMonthLabelAlignment", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, HorizontalFirstOfMonthLabelAlignmentProperty), SetPropValue<winrt::Windows::UI::Xaml::HorizontalAlignment>, ViewManagerPropertyType::String }},
        { "horizontalOffset", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::Popup, HorizontalOffsetProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "horizontalOffset", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ToolTip, HorizontalOffsetProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "horizontalOffset", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, HorizontalOffsetProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "horizontalScrollBarVisibility", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, HorizontalScrollBarVisibilityProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::ScrollBarVisibility>, ViewManagerPropertyType::String }},
        { "horizontalScrollMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, HorizontalScrollModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::ScrollMode>, ViewManagerPropertyType::String }},
        { "horizontalShift", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ParallaxView, HorizontalShiftProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "horizontalSnapPointsAlignment", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, HorizontalSnapPointsAlignmentProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::Primitives::SnapPointsAlignment>, ViewManagerPropertyType::String }},
        { "horizontalSnapPointsType", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, HorizontalSnapPointsTypeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::SnapPointsType>, ViewManagerPropertyType::String }},
        { "horizontalSourceEndOffset", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ParallaxView, HorizontalSourceEndOffsetProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "horizontalSourceOffsetKind", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ParallaxView, HorizontalSourceOffsetKindProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::ParallaxSourceOffsetKind>, ViewManagerPropertyType::String }},
        { "horizontalSourceStartOffset", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ParallaxView, HorizontalSourceStartOffsetProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "horizontalTextAlignment", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBox, HorizontalTextAlignmentProperty), SetPropValue<winrt::Windows::UI::Xaml::TextAlignment>, ViewManagerPropertyType::String }},
        { "horizontalTextAlignment", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBlock, HorizontalTextAlignmentProperty), SetPropValue<winrt::Windows::UI::Xaml::TextAlignment>, ViewManagerPropertyType::String }},
        { "horizontalTextAlignment", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichEditBox, HorizontalTextAlignmentProperty), SetPropValue<winrt::Windows::UI::Xaml::TextAlignment>, ViewManagerPropertyType::String }},
        { "horizontalTextAlignment", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichTextBlock, HorizontalTextAlignmentProperty), SetPropValue<winrt::Windows::UI::Xaml::TextAlignment>, ViewManagerPropertyType::String }},
        { "hoverBorderBrush", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, HoverBorderBrushProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "incrementalLoadingThreshold", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ListViewBase, IncrementalLoadingThresholdProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "incrementalLoadingTrigger", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ListViewBase, IncrementalLoadingTriggerProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::IncrementalLoadingTrigger>, ViewManagerPropertyType::String }},
        { "indicatorMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ScrollBar, IndicatorModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::Primitives::ScrollingIndicatorMode>, ViewManagerPropertyType::String }},
        { "indices", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Documents::Glyphs, IndicesProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "initialControls", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::InkToolbar, InitialControlsProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::InkToolbarInitialControls>, ViewManagerPropertyType::String }},
        { "initials", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::PersonPicture, InitialsProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "initialSetValue", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RatingControl, InitialSetValueProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "intermediateValue", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Slider, IntermediateValueProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "interval", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::RepeatButton, IntervalProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "is3DSupported", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Maps::MapControl, Is3DSupportedProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isActive", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ProgressRing, IsActiveProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isActiveView", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Hub, IsActiveViewProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isActiveView", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ListViewBase, IsActiveViewProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isAlphaEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ColorPicker, IsAlphaEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isAlphaSliderVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ColorPicker, IsAlphaSliderVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isAlphaTextInputVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ColorPicker, IsAlphaTextInputVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isAudioOnly", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaElement, IsAudioOnlyProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isBackButtonVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::NavigationView, IsBackButtonVisibleProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::NavigationViewBackButtonVisible>, ViewManagerPropertyType::String }},
        { "isBackEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::NavigationView, IsBackEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isBlackout", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarViewDayItem, IsBlackoutProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isCalendarOpen", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarDatePicker, IsCalendarOpenProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isChecked", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ToggleMenuFlyoutItem, IsCheckedProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isChecked", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::InkToolbarFlyoutItem, IsCheckedProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isClearAllVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::InkToolbarEraserButton, IsClearAllVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isClearEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RatingControl, IsClearEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isColorChannelTextInputVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ColorPicker, IsColorChannelTextInputVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isColorFontEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Documents::Glyphs, IsColorFontEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isColorFontEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichTextBlock, IsColorFontEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isColorFontEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBox, IsColorFontEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isColorFontEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBlock, IsColorFontEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isColorFontEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichEditBox, IsColorFontEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isColorPreviewVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ColorPicker, IsColorPreviewVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isColorSliderVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ColorPicker, IsColorSliderVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isColorSpectrumVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ColorPicker, IsColorSpectrumVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isCompact", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::AppBarElementContainer, IsCompactProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isCompact", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::AppBarSeparator, IsCompactProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isCompact", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::AppBarButton, IsCompactProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isCompact", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::AppBarToggleButton, IsCompactProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isCompact", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaTransportControls, IsCompactProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isCompactOverlayButtonVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaTransportControls, IsCompactOverlayButtonVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isCompactOverlayEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaTransportControls, IsCompactOverlayEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isDefaultShadowEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::FlyoutPresenter, IsDefaultShadowEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isDefaultShadowEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MenuFlyoutPresenter, IsDefaultShadowEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isDefaultShadowEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TimePickerFlyoutPresenter, IsDefaultShadowEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isDefaultShadowEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::DatePickerFlyoutPresenter, IsDefaultShadowEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isDeferredScrollingEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, IsDeferredScrollingEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isDirectionReversed", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Slider, IsDirectionReversedProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isDragging", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::Thumb, IsDraggingProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isDropDownOpen", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ComboBox, IsDropDownOpenProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isDynamicOverflowEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CommandBar, IsDynamicOverflowEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isEditable", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ComboBox, IsEditableProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Control, IsEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isExpanded", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TreeViewItem, IsExpandedProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isExtensionGlyphShown", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::InkToolbarToolButton, IsExtensionGlyphShownProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isExtensionGlyphShown", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::InkToolbarMenuButton, IsExtensionGlyphShownProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isFastForwardButtonVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaTransportControls, IsFastForwardButtonVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isFastForwardEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaTransportControls, IsFastForwardEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isFastRewindButtonVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaTransportControls, IsFastRewindButtonVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isFastRewindEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaTransportControls, IsFastRewindEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isFocusEngaged", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Control, IsFocusEngagedProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isFocusEngagementEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Control, IsFocusEngagementEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isFullWindow", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaElement, IsFullWindowProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isFullWindow", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaPlayerPresenter, IsFullWindowProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isFullWindow", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaPlayerElement, IsFullWindowProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isFullWindowButtonVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaTransportControls, IsFullWindowButtonVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isFullWindowEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaTransportControls, IsFullWindowEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isGroup", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::PersonPicture, IsGroupProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isGrouping", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ItemsControl, IsGroupingProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isGroupLabelVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, IsGroupLabelVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isGroupLabelVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarDatePicker, IsGroupLabelVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isHandwritingViewEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichEditBox, IsHandwritingViewEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isHandwritingViewEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBox, IsHandwritingViewEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isHeaderInteractive", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::HubSection, IsHeaderInteractiveProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isHeaderItemsCarouselEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Pivot, IsHeaderItemsCarouselEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isHexInputVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ColorPicker, IsHexInputVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isHorizontalRailEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, IsHorizontalRailEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isHorizontalScrollChainingEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, IsHorizontalScrollChainingEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isHorizontalShiftClamped", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ParallaxView, IsHorizontalShiftClampedProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isIndeterminate", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ProgressBar, IsIndeterminateProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isInOverflow", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::AppBarButton, IsInOverflowProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isInOverflow", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::AppBarElementContainer, IsInOverflowProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isInOverflow", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::AppBarSeparator, IsInOverflowProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isInOverflow", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::AppBarToggleButton, IsInOverflowProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isItemClickEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ListViewBase, IsItemClickEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isItemsHost", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Panel, IsItemsHostProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isLightDismissEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::Popup, IsLightDismissEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isLocked", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Pivot, IsLockedProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isLooping", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaElement, IsLoopingProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isMoreButtonVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ColorPicker, IsMoreButtonVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isMultiSelectCheckBoxEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ListViewBase, IsMultiSelectCheckBoxEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isMuted", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaElement, IsMutedProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isNavigationStackEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Frame, IsNavigationStackEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isNextTrackButtonVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaTransportControls, IsNextTrackButtonVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isOn", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ToggleSwitch, IsOnProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isOpen", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ToolTip, IsOpenProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isOpen", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::HandwritingView, IsOpenProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isOpen", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::AppBar, IsOpenProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isOpen", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::Popup, IsOpenProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isOutOfScopeEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, IsOutOfScopeEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isOutOfScopeEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarDatePicker, IsOutOfScopeEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isPaneOpen", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::NavigationView, IsPaneOpenProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isPaneOpen", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::SplitView, IsPaneOpenProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isPaneToggleButtonVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::NavigationView, IsPaneToggleButtonVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isPaneVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::NavigationView, IsPaneVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isPasswordRevealButtonEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::PasswordBox, IsPasswordRevealButtonEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isPlaybackRateButtonVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaTransportControls, IsPlaybackRateButtonVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isPlaybackRateEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaTransportControls, IsPlaybackRateEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isPointerOver", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ButtonBase, IsPointerOverProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isPressed", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ButtonBase, IsPressedProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isPreviousTrackButtonVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaTransportControls, IsPreviousTrackButtonVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isPrimaryButtonEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ContentDialog, IsPrimaryButtonEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isProtractorItemVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::InkToolbarStencilButton, IsProtractorItemVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isReadOnly", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichEditBox, IsReadOnlyProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isReadOnly", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RatingControl, IsReadOnlyProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isReadOnly", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBox, IsReadOnlyProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isRepeatButtonVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaTransportControls, IsRepeatButtonVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isRepeatEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaTransportControls, IsRepeatEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isRulerButtonChecked", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::InkToolbar, IsRulerButtonCheckedProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isRulerItemVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::InkToolbarStencilButton, IsRulerItemVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isScrollInertiaEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, IsScrollInertiaEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isSecondaryButtonEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ContentDialog, IsSecondaryButtonEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isSeekBarVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaTransportControls, IsSeekBarVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isSeekEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaTransportControls, IsSeekEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isSelected", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::SelectorItem, IsSelectedProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isSettingsVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::NavigationView, IsSettingsVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isSkipBackwardButtonVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaTransportControls, IsSkipBackwardButtonVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isSkipBackwardEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaTransportControls, IsSkipBackwardEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isSkipForwardButtonVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaTransportControls, IsSkipForwardButtonVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isSkipForwardEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaTransportControls, IsSkipForwardEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isSpellCheckEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichEditBox, IsSpellCheckEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isSpellCheckEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBox, IsSpellCheckEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isStencilButtonChecked", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::InkToolbar, IsStencilButtonCheckedProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isStereo3DVideo", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaElement, IsStereo3DVideoProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isSticky", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::AppBar, IsStickyProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isStopButtonVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaTransportControls, IsStopButtonVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isStopEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaTransportControls, IsStopEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isStreetsideSupported", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Maps::MapControl, IsStreetsideSupportedProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isSuggestionListOpen", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::AutoSuggestBox, IsSuggestionListOpenProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isSwipeEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ListViewBase, IsSwipeEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isTabStop", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Control, IsTabStopProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isTextPredictionEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichEditBox, IsTextPredictionEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isTextPredictionEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBox, IsTextPredictionEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isTextScaleFactorEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ContentPresenter, IsTextScaleFactorEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isTextScaleFactorEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Control, IsTextScaleFactorEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isTextScaleFactorEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::FontIcon, IsTextScaleFactorEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isTextScaleFactorEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBlock, IsTextScaleFactorEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isTextScaleFactorEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichTextBlock, IsTextScaleFactorEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isTextSearchEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ComboBox, IsTextSearchEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isTextSelectionEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichTextBlock, IsTextSelectionEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isTextSelectionEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBlock, IsTextSelectionEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isTextTrimmed", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichTextBlockOverflow, IsTextTrimmedProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isTextTrimmed", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBlock, IsTextTrimmedProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isTextTrimmed", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichTextBlock, IsTextTrimmedProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isThreeState", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ToggleButton, IsThreeStateProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isThumbToolTipEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Slider, IsThumbToolTipEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isTodayHighlighted", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, IsTodayHighlightedProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isTodayHighlighted", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarDatePicker, IsTodayHighlightedProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isVerticalRailEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, IsVerticalRailEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isVerticalScrollChainingEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, IsVerticalScrollChainingEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isVerticalShiftClamped", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ParallaxView, IsVerticalShiftClampedProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isVolumeButtonVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaTransportControls, IsVolumeButtonVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isVolumeEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaTransportControls, IsVolumeEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isZoomButtonVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaTransportControls, IsZoomButtonVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isZoomChainingEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, IsZoomChainingEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isZoomedInView", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Hub, IsZoomedInViewProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isZoomedInView", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ListViewBase, IsZoomedInViewProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isZoomedInViewActive", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::SemanticZoom, IsZoomedInViewActiveProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isZoomEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaTransportControls, IsZoomEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isZoomInertiaEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, IsZoomInertiaEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "isZoomOutButtonEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::SemanticZoom, IsZoomOutButtonEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "itemHeight", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ItemsWrapGrid, ItemHeightProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "itemHeight", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::LoopingSelector, ItemHeightProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "itemHeight", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::VariableSizedWrapGrid, ItemHeightProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "itemHeight", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::WrapGrid, ItemHeightProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "itemWidth", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::VariableSizedWrapGrid, ItemWidthProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "itemWidth", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ItemsWrapGrid, ItemWidthProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "itemWidth", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::WrapGrid, ItemWidthProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "itemWidth", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::LoopingSelector, ItemWidthProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "keyboardAcceleratorTextOverride", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MenuFlyoutItem, KeyboardAcceleratorTextOverrideProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "keyboardAcceleratorTextOverride", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::AppBarToggleButton, KeyboardAcceleratorTextOverrideProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "keyboardAcceleratorTextOverride", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::AppBarButton, KeyboardAcceleratorTextOverrideProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "kind", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::InkToolbarFlyoutItem, KindProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::InkToolbarFlyoutItemKind>, ViewManagerPropertyType::String }},
        { "label", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::AppBarToggleButton, LabelProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "label", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::AppBarButton, LabelProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "labelPosition", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::AppBarToggleButton, LabelPositionProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::CommandBarLabelPosition>, ViewManagerPropertyType::String }},
        { "labelPosition", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::AppBarButton, LabelPositionProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::CommandBarLabelPosition>, ViewManagerPropertyType::String }},
        { "landmarksVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Maps::MapControl, LandmarksVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "largeChange", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::RangeBase, LargeChangeProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "lightDismissOverlayMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarDatePicker, LightDismissOverlayModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::LightDismissOverlayMode>, ViewManagerPropertyType::String }},
        { "lightDismissOverlayMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::DatePicker, LightDismissOverlayModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::LightDismissOverlayMode>, ViewManagerPropertyType::String }},
        { "lightDismissOverlayMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::AppBar, LightDismissOverlayModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::LightDismissOverlayMode>, ViewManagerPropertyType::String }},
        { "lightDismissOverlayMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::Popup, LightDismissOverlayModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::LightDismissOverlayMode>, ViewManagerPropertyType::String }},
        { "lightDismissOverlayMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::AutoSuggestBox, LightDismissOverlayModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::LightDismissOverlayMode>, ViewManagerPropertyType::String }},
        { "lightDismissOverlayMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::SplitView, LightDismissOverlayModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::LightDismissOverlayMode>, ViewManagerPropertyType::String }},
        { "lightDismissOverlayMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ComboBox, LightDismissOverlayModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::LightDismissOverlayMode>, ViewManagerPropertyType::String }},
        { "lightDismissOverlayMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TimePicker, LightDismissOverlayModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::LightDismissOverlayMode>, ViewManagerPropertyType::String }},
        { "lineHeight", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ContentPresenter, LineHeightProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "lineHeight", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBlock, LineHeightProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "lineHeight", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichTextBlock, LineHeightProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "lineStackingStrategy", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ContentPresenter, LineStackingStrategyProperty), SetPropValue<winrt::Windows::UI::Xaml::LineStackingStrategy>, ViewManagerPropertyType::String }},
        { "lineStackingStrategy", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichTextBlock, LineStackingStrategyProperty), SetPropValue<winrt::Windows::UI::Xaml::LineStackingStrategy>, ViewManagerPropertyType::String }},
        { "lineStackingStrategy", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBlock, LineStackingStrategyProperty), SetPropValue<winrt::Windows::UI::Xaml::LineStackingStrategy>, ViewManagerPropertyType::String }},
        { "listViewItemPresenterHorizontalContentAlignment", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ListViewItemPresenter, ListViewItemPresenterHorizontalContentAlignmentProperty), SetPropValue<winrt::Windows::UI::Xaml::HorizontalAlignment>, ViewManagerPropertyType::String }},
        { "listViewItemPresenterVerticalContentAlignment", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ListViewItemPresenter, ListViewItemPresenterVerticalContentAlignmentProperty), SetPropValue<winrt::Windows::UI::Xaml::VerticalAlignment>, ViewManagerPropertyType::String }},
        { "loadingStatus", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Maps::MapControl, LoadingStatusProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::Maps::MapLoadingStatus>, ViewManagerPropertyType::String }},
        { "mapProjection", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Maps::MapControl, MapProjectionProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::Maps::MapProjection>, ViewManagerPropertyType::String }},
        { "mapServiceToken", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Maps::MapControl, MapServiceTokenProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "maxDropDownHeight", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ComboBox, MaxDropDownHeightProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "maxHorizontalShiftRatio", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ParallaxView, MaxHorizontalShiftRatioProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "maxHue", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ColorPicker, MaxHueProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "maxHue", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ColorSpectrum, MaxHueProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "maximum", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::RangeBase, MaximumProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "maximumRowsOrColumns", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::WrapGrid, MaximumRowsOrColumnsProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "maximumRowsOrColumns", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ItemsWrapGrid, MaximumRowsOrColumnsProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "maximumRowsOrColumns", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::VariableSizedWrapGrid, MaximumRowsOrColumnsProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "maxLength", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::PasswordBox, MaxLengthProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "maxLength", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBox, MaxLengthProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "maxLength", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichEditBox, MaxLengthProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "maxLines", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichTextBlock, MaxLinesProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "maxLines", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ContentPresenter, MaxLinesProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "maxLines", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichTextBlockOverflow, MaxLinesProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "maxLines", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBlock, MaxLinesProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "maxRating", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RatingControl, MaxRatingProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "maxSaturation", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ColorSpectrum, MaxSaturationProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "maxSaturation", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ColorPicker, MaxSaturationProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "maxStrokeWidth", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::InkToolbarPenButton, MaxStrokeWidthProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "maxSuggestionListHeight", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::AutoSuggestBox, MaxSuggestionListHeightProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "maxValue", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ColorSpectrum, MaxValueProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "maxValue", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ColorPicker, MaxValueProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "maxVerticalShiftRatio", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ParallaxView, MaxVerticalShiftRatioProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "maxZoomFactor", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, MaxZoomFactorProperty), SetPropValue<float>, ViewManagerPropertyType::Number }},
        { "minHue", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ColorSpectrum, MinHueProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "minHue", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ColorPicker, MinHueProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "minimum", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::RangeBase, MinimumProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "minSaturation", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ColorPicker, MinSaturationProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "minSaturation", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ColorSpectrum, MinSaturationProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "minStrokeWidth", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::InkToolbarPenButton, MinStrokeWidthProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "minTallModeHeight", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TwoPaneView, MinTallModeHeightProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "minuteIncrement", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TimePicker, MinuteIncrementProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "minValue", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ColorSpectrum, MinValueProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "minValue", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ColorPicker, MinValueProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "minWideModeWidth", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TwoPaneView, MinWideModeWidthProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "minZoomFactor", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, MinZoomFactorProperty), SetPropValue<float>, ViewManagerPropertyType::Number }},
        { "mirroredWhenRightToLeft", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::FontIcon, MirroredWhenRightToLeftProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "mode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TwoPaneView, ModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::TwoPaneViewMode>, ViewManagerPropertyType::String }},
        { "monthFormat", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::DatePicker, MonthFormatProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "monthVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::DatePicker, MonthVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "monthYearItemFontSize", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, MonthYearItemFontSizeProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "monthYearItemFontStyle", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, MonthYearItemFontStyleProperty), SetPropValue<winrt::Windows::UI::Text::FontStyle>, ViewManagerPropertyType::String }},
        { "naturalVideoHeight", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaElement, NaturalVideoHeightProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "naturalVideoWidth", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaElement, NaturalVideoWidthProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "numberOfWeeksInView", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, NumberOfWeeksInViewProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "openPaneLength", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::NavigationView, OpenPaneLengthProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "openPaneLength", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::SplitView, OpenPaneLengthProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "opticalMarginAlignment", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBlock, OpticalMarginAlignmentProperty), SetPropValue<winrt::Windows::UI::Xaml::OpticalMarginAlignment>, ViewManagerPropertyType::String }},
        { "opticalMarginAlignment", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichTextBlock, OpticalMarginAlignmentProperty), SetPropValue<winrt::Windows::UI::Xaml::OpticalMarginAlignment>, ViewManagerPropertyType::String }},
        { "opticalMarginAlignment", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ContentPresenter, OpticalMarginAlignmentProperty), SetPropValue<winrt::Windows::UI::Xaml::OpticalMarginAlignment>, ViewManagerPropertyType::String }},
        { "orientation", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ScrollBar, OrientationProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::Orientation>, ViewManagerPropertyType::String }},
        { "orientation", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ItemsWrapGrid, OrientationProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::Orientation>, ViewManagerPropertyType::String }},
        { "orientation", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ItemsStackPanel, OrientationProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::Orientation>, ViewManagerPropertyType::String }},
        { "orientation", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::VariableSizedWrapGrid, OrientationProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::Orientation>, ViewManagerPropertyType::String }},
        { "orientation", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Hub, OrientationProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::Orientation>, ViewManagerPropertyType::String }},
        { "orientation", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Slider, OrientationProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::Orientation>, ViewManagerPropertyType::String }},
        { "orientation", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::VirtualizingStackPanel, OrientationProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::Orientation>, ViewManagerPropertyType::String }},
        { "orientation", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::InkToolbar, OrientationProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::Orientation>, ViewManagerPropertyType::String }},
        { "orientation", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::StackPanel, OrientationProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::Orientation>, ViewManagerPropertyType::String }},
        { "orientation", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::WrapGrid, OrientationProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::Orientation>, ViewManagerPropertyType::String }},
        { "orientation", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::DatePicker, OrientationProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::Orientation>, ViewManagerPropertyType::String }},
        { "orientation", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RefreshVisualizer, OrientationProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::RefreshVisualizerOrientation>, ViewManagerPropertyType::String }},
        { "originX", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Documents::Glyphs, OriginXProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "originY", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Documents::Glyphs, OriginYProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "outOfScopeBackground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, OutOfScopeBackgroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "outOfScopeForeground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, OutOfScopeForegroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "overflowButtonVisibility", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CommandBar, OverflowButtonVisibilityProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::CommandBarOverflowButtonVisibility>, ViewManagerPropertyType::String }},
        { "overflowLabelMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::NavigationView, OverflowLabelModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::NavigationViewOverflowLabelMode>, ViewManagerPropertyType::String }},
        { "paneBackground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::SplitView, PaneBackgroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "paneDisplayMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::NavigationView, PaneDisplayModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::NavigationViewPaneDisplayMode>, ViewManagerPropertyType::String }},
        { "panePlacement", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::SplitView, PanePlacementProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::SplitViewPanePlacement>, ViewManagerPropertyType::String }},
        { "panePriority", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TwoPaneView, PanePriorityProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::TwoPaneViewPriority>, ViewManagerPropertyType::String }},
        { "paneTitle", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::NavigationView, PaneTitleProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "panInteractionMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Maps::MapControl, PanInteractionModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::Maps::MapPanInteractionMode>, ViewManagerPropertyType::String }},
        { "password", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::PasswordBox, PasswordProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "passwordChar", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::PasswordBox, PasswordCharProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "passwordRevealMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::PasswordBox, PasswordRevealModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::PasswordRevealMode>, ViewManagerPropertyType::String }},
        { "pedestrianFeaturesVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Maps::MapControl, PedestrianFeaturesVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "pitch", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Maps::MapControl, PitchProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "placeholderBackground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::GridViewItemPresenter, PlaceholderBackgroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "placeholderBackground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ListViewItemPresenter, PlaceholderBackgroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "placeholderForeground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ComboBox, PlaceholderForegroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "placeholderForeground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBox, PlaceholderForegroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "placeholderText", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::AutoSuggestBox, PlaceholderTextProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "placeholderText", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichEditBox, PlaceholderTextProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "placeholderText", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::PasswordBox, PlaceholderTextProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "placeholderText", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::SearchBox, PlaceholderTextProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "placeholderText", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarDatePicker, PlaceholderTextProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "placeholderText", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBox, PlaceholderTextProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "placeholderText", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ComboBox, PlaceholderTextProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "placeholderValue", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RatingControl, PlaceholderValueProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "placement", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ToolTip, PlacementProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::Primitives::PlacementMode>, ViewManagerPropertyType::String }},
        { "placementAlignment", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::HandwritingView, PlacementAlignmentProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::HandwritingPanelPlacementAlignment>, ViewManagerPropertyType::String }},
        { "playbackRate", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaElement, PlaybackRateProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "pointerOverBackground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ListViewItemPresenter, PointerOverBackgroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "pointerOverBackground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::GridViewItemPresenter, PointerOverBackgroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "pointerOverForeground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ListViewItemPresenter, PointerOverForegroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "preferSmallImage", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::PersonPicture, PreferSmallImageProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "pressedBackground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ListViewItemPresenter, PressedBackgroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "pressedBorderBrush", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, PressedBorderBrushProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "pressedForeground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, PressedForegroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "preventKeyboardDisplayOnProgrammaticFocus", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichEditBox, PreventKeyboardDisplayOnProgrammaticFocusProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "preventKeyboardDisplayOnProgrammaticFocus", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::PasswordBox, PreventKeyboardDisplayOnProgrammaticFocusProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "preventKeyboardDisplayOnProgrammaticFocus", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBox, PreventKeyboardDisplayOnProgrammaticFocusProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "primaryButtonText", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ContentDialog, PrimaryButtonTextProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "pullDirection", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RefreshContainer, PullDirectionProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::RefreshPullDirection>, ViewManagerPropertyType::String }},
        { "queryText", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::SearchBox, QueryTextProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "radiusX", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Shapes::Rectangle, RadiusXProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "radiusY", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Shapes::Rectangle, RadiusYProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "realTimePlayback", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaElement, RealTimePlaybackProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "reduceViewportForCoreInputViewOcclusions", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, ReduceViewportForCoreInputViewOcclusionsProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "region", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Maps::MapControl, RegionProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "reorderHintOffset", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ListViewItemPresenter, ReorderHintOffsetProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "reorderHintOffset", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::GridViewItemPresenter, ReorderHintOffsetProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "reorderMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ListViewBase, ReorderModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::ListViewReorderMode>, ViewManagerPropertyType::String }},
        { "requiresPointer", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Control, RequiresPointerProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::RequiresPointer>, ViewManagerPropertyType::String }},
        { "revealBackground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ListViewItemPresenter, RevealBackgroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "revealBackgroundShowsAboveContent", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ListViewItemPresenter, RevealBackgroundShowsAboveContentProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "revealBorderBrush", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ListViewItemPresenter, RevealBorderBrushProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "rotateInteractionMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Maps::MapControl, RotateInteractionModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::Maps::MapInteractionMode>, ViewManagerPropertyType::String }},
        { "rowSpacing", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Grid, RowSpacingProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "scrollableHeight", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, ScrollableHeightProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "scrollableWidth", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, ScrollableWidthProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "searchHistoryContext", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::SearchBox, SearchHistoryContextProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "searchHistoryEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::SearchBox, SearchHistoryEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "secondaryButtonText", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ContentDialog, SecondaryButtonTextProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "selectedBackground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::GridViewItemPresenter, SelectedBackgroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "selectedBackground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ListViewItemPresenter, SelectedBackgroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "selectedBorderBrush", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, SelectedBorderBrushProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "selectedBrush", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::InkToolbarPenButton, SelectedBrushProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "selectedBrushIndex", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::InkToolbarPenButton, SelectedBrushIndexProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "selectedForeground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, SelectedForegroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "selectedForeground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ListViewItemPresenter, SelectedForegroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "selectedForeground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::GridViewItemPresenter, SelectedForegroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "selectedHoverBorderBrush", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, SelectedHoverBorderBrushProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "selectedIndex", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Pivot, SelectedIndexProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "selectedIndex", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::LoopingSelector, SelectedIndexProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "selectedIndex", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::Selector, SelectedIndexProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "selectedPointerOverBackground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::GridViewItemPresenter, SelectedPointerOverBackgroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "selectedPointerOverBackground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ListViewItemPresenter, SelectedPointerOverBackgroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "selectedPointerOverBorderBrush", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::GridViewItemPresenter, SelectedPointerOverBorderBrushProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "selectedPointerOverBorderBrush", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ListViewItemPresenter, SelectedPointerOverBorderBrushProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "selectedPressedBackground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ListViewItemPresenter, SelectedPressedBackgroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "selectedPressedBorderBrush", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, SelectedPressedBorderBrushProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "selectedStencil", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::InkToolbarStencilButton, SelectedStencilProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::InkToolbarStencilKind>, ViewManagerPropertyType::String }},
        { "selectedStrokeWidth", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::InkToolbarPenButton, SelectedStrokeWidthProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "selectedText", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBlock, SelectedTextProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "selectedText", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichTextBlock, SelectedTextProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "selectedValuePath", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::Selector, SelectedValuePathProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "selectionChangedTrigger", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ComboBox, SelectionChangedTriggerProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::ComboBoxSelectionChangedTrigger>, ViewManagerPropertyType::String }},
        { "selectionCheckMarkVisualEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ListViewItemPresenter, SelectionCheckMarkVisualEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "selectionCheckMarkVisualEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::GridViewItemPresenter, SelectionCheckMarkVisualEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "selectionFollowsFocus", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::NavigationView, SelectionFollowsFocusProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::NavigationViewSelectionFollowsFocus>, ViewManagerPropertyType::String }},
        { "selectionHighlightColor", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::PasswordBox, SelectionHighlightColorProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::SolidColorBrush>, ViewManagerPropertyType::Color }},
        { "selectionHighlightColor", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichEditBox, SelectionHighlightColorProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::SolidColorBrush>, ViewManagerPropertyType::Color }},
        { "selectionHighlightColor", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichTextBlock, SelectionHighlightColorProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::SolidColorBrush>, ViewManagerPropertyType::Color }},
        { "selectionHighlightColor", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBlock, SelectionHighlightColorProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::SolidColorBrush>, ViewManagerPropertyType::Color }},
        { "selectionHighlightColor", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBox, SelectionHighlightColorProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::SolidColorBrush>, ViewManagerPropertyType::Color }},
        { "selectionHighlightColorWhenNotFocused", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBox, SelectionHighlightColorWhenNotFocusedProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::SolidColorBrush>, ViewManagerPropertyType::Color }},
        { "selectionHighlightColorWhenNotFocused", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichEditBox, SelectionHighlightColorWhenNotFocusedProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::SolidColorBrush>, ViewManagerPropertyType::Color }},
        { "selectionMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ListBox, SelectionModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::SelectionMode>, ViewManagerPropertyType::String }},
        { "selectionMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, SelectionModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::CalendarViewSelectionMode>, ViewManagerPropertyType::String }},
        { "selectionMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TreeView, SelectionModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::TreeViewSelectionMode>, ViewManagerPropertyType::String }},
        { "selectionMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ListViewBase, SelectionModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::ListViewSelectionMode>, ViewManagerPropertyType::String }},
        { "selectsOnInvoked", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::NavigationViewItem, SelectsOnInvokedProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "shape", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ColorSpectrum, ShapeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::ColorSpectrumShape>, ViewManagerPropertyType::String }},
        { "shouldConstrainToRootBounds", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::Popup, ShouldConstrainToRootBoundsProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "shoulderNavigationEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::NavigationView, ShoulderNavigationEnabledProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::NavigationViewShoulderNavigationEnabled>, ViewManagerPropertyType::String }},
        { "shouldLoop", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::LoopingSelector, ShouldLoopProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "showAndHideAutomatically", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaTransportControls, ShowAndHideAutomaticallyProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "showAsMonochrome", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::BitmapIcon, ShowAsMonochromeProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "showError", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ProgressBar, ShowErrorProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "showPaused", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ProgressBar, ShowPausedProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "showsScrollingPlaceholders", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ListViewBase, ShowsScrollingPlaceholdersProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "singleSelectionFollowsFocus", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ListViewBase, SingleSelectionFollowsFocusProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "singleSelectionFollowsFocus", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ListBox, SingleSelectionFollowsFocusProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "sizesContentToTemplatedParent", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollContentPresenter, SizesContentToTemplatedParentProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "smallChange", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::RangeBase, SmallChangeProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "snapsTo", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Slider, SnapsToProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::Primitives::SliderSnapsTo>, ViewManagerPropertyType::String }},
        { "spacing", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::StackPanel, SpacingProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "state", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RefreshVisualizer, StateProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::RefreshVisualizerState>, ViewManagerPropertyType::String }},
        { "stepFrequency", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Slider, StepFrequencyProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "stereo3DVideoPackingMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaElement, Stereo3DVideoPackingModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Stereo3DVideoPackingMode>, ViewManagerPropertyType::String }},
        { "stereo3DVideoRenderMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaElement, Stereo3DVideoRenderModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Stereo3DVideoRenderMode>, ViewManagerPropertyType::String }},
        { "stretch", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaPlayerPresenter, StretchProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Stretch>, ViewManagerPropertyType::String }},
        { "stretch", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaPlayerElement, StretchProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Stretch>, ViewManagerPropertyType::String }},
        { "stretch", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Shapes::Shape, StretchProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Stretch>, ViewManagerPropertyType::String }},
        { "stretch", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CaptureElement, StretchProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Stretch>, ViewManagerPropertyType::String }},
        { "stretch", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Viewbox, StretchProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Stretch>, ViewManagerPropertyType::String }},
        { "stretch", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaElement, StretchProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Stretch>, ViewManagerPropertyType::String }},
        { "stretch", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Image, StretchProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Stretch>, ViewManagerPropertyType::String }},
        { "stretchDirection", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Viewbox, StretchDirectionProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::StretchDirection>, ViewManagerPropertyType::String }},
        { "stroke", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Shapes::Shape, StrokeProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "strokeDashCap", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Shapes::Shape, StrokeDashCapProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::PenLineCap>, ViewManagerPropertyType::String }},
        { "strokeDashOffset", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Shapes::Shape, StrokeDashOffsetProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "strokeEndLineCap", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Shapes::Shape, StrokeEndLineCapProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::PenLineCap>, ViewManagerPropertyType::String }},
        { "strokeLineJoin", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Shapes::Shape, StrokeLineJoinProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::PenLineJoin>, ViewManagerPropertyType::String }},
        { "strokeMiterLimit", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Shapes::Shape, StrokeMiterLimitProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "strokeStartLineCap", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Shapes::Shape, StrokeStartLineCapProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::PenLineCap>, ViewManagerPropertyType::String }},
        { "strokeThickness", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Shapes::Shape, StrokeThicknessProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "style", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Maps::MapControl, StyleProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::Maps::MapStyle>, ViewManagerPropertyType::String }},
        { "styleSimulations", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Documents::Glyphs, StyleSimulationsProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::StyleSimulations>, ViewManagerPropertyType::String }},
        { "symbol", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::SymbolIcon, SymbolProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::Symbol>, ViewManagerPropertyType::String }},
        { "tabIndex", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Control, TabIndexProperty), SetPropValue<int32_t>, ViewManagerPropertyType::Number }},
        { "tabNavigation", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Control, TabNavigationProperty), SetPropValue<winrt::Windows::UI::Xaml::Input::KeyboardNavigationMode>, ViewManagerPropertyType::String }},
        { "tallModeConfiguration", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TwoPaneView, TallModeConfigurationProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::TwoPaneViewTallModeConfiguration>, ViewManagerPropertyType::String }},
        { "text", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBlock, TextProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "text", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBox, TextProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "text", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ComboBox, TextProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "text", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::AutoSuggestBox, TextProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "text", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MenuFlyoutSubItem, TextProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "text", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MenuFlyoutItem, TextProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "textAlignment", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBlock, TextAlignmentProperty), SetPropValue<winrt::Windows::UI::Xaml::TextAlignment>, ViewManagerPropertyType::String }},
        { "textAlignment", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichTextBlock, TextAlignmentProperty), SetPropValue<winrt::Windows::UI::Xaml::TextAlignment>, ViewManagerPropertyType::String }},
        { "textAlignment", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBox, TextAlignmentProperty), SetPropValue<winrt::Windows::UI::Xaml::TextAlignment>, ViewManagerPropertyType::String }},
        { "textAlignment", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichEditBox, TextAlignmentProperty), SetPropValue<winrt::Windows::UI::Xaml::TextAlignment>, ViewManagerPropertyType::String }},
        { "textDecorations", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichTextBlock, TextDecorationsProperty), SetPropValue<winrt::Windows::UI::Text::TextDecorations>, ViewManagerPropertyType::String }},
        { "textDecorations", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBlock, TextDecorationsProperty), SetPropValue<winrt::Windows::UI::Text::TextDecorations>, ViewManagerPropertyType::String }},
        { "textIndent", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichTextBlock, TextIndentProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "textLineBounds", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ContentPresenter, TextLineBoundsProperty), SetPropValue<winrt::Windows::UI::Xaml::TextLineBounds>, ViewManagerPropertyType::String }},
        { "textLineBounds", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBlock, TextLineBoundsProperty), SetPropValue<winrt::Windows::UI::Xaml::TextLineBounds>, ViewManagerPropertyType::String }},
        { "textLineBounds", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichTextBlock, TextLineBoundsProperty), SetPropValue<winrt::Windows::UI::Xaml::TextLineBounds>, ViewManagerPropertyType::String }},
        { "textMemberPath", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::AutoSuggestBox, TextMemberPathProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "textReadingOrder", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichTextBlock, TextReadingOrderProperty), SetPropValue<winrt::Windows::UI::Xaml::TextReadingOrder>, ViewManagerPropertyType::String }},
        { "textReadingOrder", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::PasswordBox, TextReadingOrderProperty), SetPropValue<winrt::Windows::UI::Xaml::TextReadingOrder>, ViewManagerPropertyType::String }},
        { "textReadingOrder", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBox, TextReadingOrderProperty), SetPropValue<winrt::Windows::UI::Xaml::TextReadingOrder>, ViewManagerPropertyType::String }},
        { "textReadingOrder", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichEditBox, TextReadingOrderProperty), SetPropValue<winrt::Windows::UI::Xaml::TextReadingOrder>, ViewManagerPropertyType::String }},
        { "textReadingOrder", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBlock, TextReadingOrderProperty), SetPropValue<winrt::Windows::UI::Xaml::TextReadingOrder>, ViewManagerPropertyType::String }},
        { "textTrimming", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBlock, TextTrimmingProperty), SetPropValue<winrt::Windows::UI::Xaml::TextTrimming>, ViewManagerPropertyType::String }},
        { "textTrimming", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichTextBlock, TextTrimmingProperty), SetPropValue<winrt::Windows::UI::Xaml::TextTrimming>, ViewManagerPropertyType::String }},
        { "textWrapping", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBlock, TextWrappingProperty), SetPropValue<winrt::Windows::UI::Xaml::TextWrapping>, ViewManagerPropertyType::String }},
        { "textWrapping", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichTextBlock, TextWrappingProperty), SetPropValue<winrt::Windows::UI::Xaml::TextWrapping>, ViewManagerPropertyType::String }},
        { "textWrapping", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ContentPresenter, TextWrappingProperty), SetPropValue<winrt::Windows::UI::Xaml::TextWrapping>, ViewManagerPropertyType::String }},
        { "textWrapping", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TextBox, TextWrappingProperty), SetPropValue<winrt::Windows::UI::Xaml::TextWrapping>, ViewManagerPropertyType::String }},
        { "textWrapping", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RichEditBox, TextWrappingProperty), SetPropValue<winrt::Windows::UI::Xaml::TextWrapping>, ViewManagerPropertyType::String }},
        { "tickFrequency", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Slider, TickFrequencyProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "tickPlacement", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Slider, TickPlacementProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::Primitives::TickPlacement>, ViewManagerPropertyType::String }},
        { "tiltInteractionMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Maps::MapControl, TiltInteractionModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::Maps::MapInteractionMode>, ViewManagerPropertyType::String }},
        { "title", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::SettingsFlyout, TitleProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "title", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MenuBarItem, TitleProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "todayForeground", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, TodayForegroundProperty), SetPropValue<winrt::Windows::UI::Xaml::Media::Brush>, ViewManagerPropertyType::Color }},
        { "trafficFlowVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Maps::MapControl, TrafficFlowVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "transitFeaturesEnabled", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Maps::MapControl, TransitFeaturesEnabledProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "transitFeaturesVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Maps::MapControl, TransitFeaturesVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "unicodeString", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Documents::Glyphs, UnicodeStringProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "updateTextOnSelect", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::AutoSuggestBox, UpdateTextOnSelectProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "useSystemFocusVisuals", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Control, UseSystemFocusVisualsProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "useTouchAnimationsForAllNavigation", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::FlipView, UseTouchAnimationsForAllNavigationProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "value", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::RangeBase, ValueProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "value", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::RatingControl, ValueProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "verticalAnchorRatio", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, VerticalAnchorRatioProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "verticalChildrenAlignment", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::WrapGrid, VerticalChildrenAlignmentProperty), SetPropValue<winrt::Windows::UI::Xaml::VerticalAlignment>, ViewManagerPropertyType::String }},
        { "verticalChildrenAlignment", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::VariableSizedWrapGrid, VerticalChildrenAlignmentProperty), SetPropValue<winrt::Windows::UI::Xaml::VerticalAlignment>, ViewManagerPropertyType::String }},
        { "verticalContentAlignment", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ContentPresenter, VerticalContentAlignmentProperty), SetPropValue<winrt::Windows::UI::Xaml::VerticalAlignment>, ViewManagerPropertyType::String }},
        { "verticalContentAlignment", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Control, VerticalContentAlignmentProperty), SetPropValue<winrt::Windows::UI::Xaml::VerticalAlignment>, ViewManagerPropertyType::String }},
        { "verticalDayItemAlignment", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, VerticalDayItemAlignmentProperty), SetPropValue<winrt::Windows::UI::Xaml::VerticalAlignment>, ViewManagerPropertyType::String }},
        { "verticalFirstOfMonthLabelAlignment", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::CalendarView, VerticalFirstOfMonthLabelAlignmentProperty), SetPropValue<winrt::Windows::UI::Xaml::VerticalAlignment>, ViewManagerPropertyType::String }},
        { "verticalOffset", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::Popup, VerticalOffsetProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "verticalOffset", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ToolTip, VerticalOffsetProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "verticalOffset", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, VerticalOffsetProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "verticalScrollBarVisibility", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, VerticalScrollBarVisibilityProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::ScrollBarVisibility>, ViewManagerPropertyType::String }},
        { "verticalScrollMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, VerticalScrollModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::ScrollMode>, ViewManagerPropertyType::String }},
        { "verticalShift", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ParallaxView, VerticalShiftProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "verticalSnapPointsAlignment", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, VerticalSnapPointsAlignmentProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::Primitives::SnapPointsAlignment>, ViewManagerPropertyType::String }},
        { "verticalSnapPointsType", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, VerticalSnapPointsTypeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::SnapPointsType>, ViewManagerPropertyType::String }},
        { "verticalSourceEndOffset", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ParallaxView, VerticalSourceEndOffsetProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "verticalSourceOffsetKind", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ParallaxView, VerticalSourceOffsetKindProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::ParallaxSourceOffsetKind>, ViewManagerPropertyType::String }},
        { "verticalSourceStartOffset", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ParallaxView, VerticalSourceStartOffsetProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "viewportHeight", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, ViewportHeightProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "viewportSize", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Primitives::ScrollBar, ViewportSizeProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "viewportWidth", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, ViewportWidthProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "volume", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::MediaElement, VolumeProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "watermarkMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Maps::MapControl, WatermarkModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::Maps::MapWatermarkMode>, ViewManagerPropertyType::String }},
        { "wideModeConfiguration", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::TwoPaneView, WideModeConfigurationProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::TwoPaneViewWideModeConfiguration>, ViewManagerPropertyType::String }},
        { "x1", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Shapes::Line, X1Property), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "x2", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Shapes::Line, X2Property), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "y1", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Shapes::Line, Y1Property), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "y2", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Shapes::Line, Y2Property), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "yearFormat", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::DatePicker, YearFormatProperty), SetPropValue<winrt::hstring>, ViewManagerPropertyType::String }},
        { "yearVisible", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::DatePicker, YearVisibleProperty), SetPropValue<bool>, ViewManagerPropertyType::Boolean }},
        { "zoomFactor", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, ZoomFactorProperty), SetPropValue<float>, ViewManagerPropertyType::Number }},
        { "zoomInteractionMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Maps::MapControl, ZoomInteractionModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::Maps::MapInteractionMode>, ViewManagerPropertyType::String }},
        { "zoomLevel", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::Maps::MapControl, ZoomLevelProperty), SetPropValue<double>, ViewManagerPropertyType::Number }},
        { "zoomMode", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, ZoomModeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::ZoomMode>, ViewManagerPropertyType::String }},
        { "zoomSnapPointsType", { MAKE_GET_DP(winrt::Windows::UI::Xaml::Controls::ScrollViewer, ZoomSnapPointsTypeProperty), SetPropValue<winrt::Windows::UI::Xaml::Controls::SnapPointsType>, ViewManagerPropertyType::String }},
    };
}


