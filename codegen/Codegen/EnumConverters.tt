<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>

<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
#include "pch.h"
#include "XamlMetadata.h"
#include "Crc32Str.h"

/*************************************************************
THIS FILE WAS AUTOMATICALLY GENERATED, DO NOT MODIFY MANUALLY
**************************************************************/

<# foreach (var ns in Util.enumsToGenerateConvertersFor.Select(t => t.GetNamespace()).Distinct()) { #>
#include <winrt/<#= ns #>.h>
<# } #>



<# foreach (var e in Util.enumsToGenerateConvertersFor) { #>
  template<> winrt::IInspectable MakeEnum<<#= Util.GetCppWinRTType(e) #>>(const std::string& value) { 
  switch (COMPILE_TIME_CRC32_STR(value.c_str())) {
	<# for (var i = 1; i < e.GetFields().Length; i++) { 
		var name = e.GetFields()[i].GetName();
	#>
    case COMPILE_TIME_CRC32_STR("<#= Util.ToJsName(name) #>"): { return winrt::box_value(<#= Util.GetCppWinRTType(e) #>::<#= name #>); }
  <# } #>
  }
  return nullptr;
  }

<# } #>