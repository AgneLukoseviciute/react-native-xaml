# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  codegen:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2

    - uses: nuget/setup-nuget@v1

    - name: NuGet restore
      run: nuget restore example\windows\example.sln

    - name: run CodeGen
      run: dotnet run -verbose -winmd ..\..\example\windows\packages\Microsoft.UI.Xaml.2.6.0\lib\uap10.0\Microsoft.UI.Xaml.winmd
      working-directory: package\Codegen

    - name: verify no changes from CodeGen
      shell: powershell
      run: |
        $changed = git status --porcelain=v1
        if ($changed -ne $null) { throw "CodeGen detected changes" }

  # example:
  #   runs-on: windows-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: yarn install
  #     run: yarn install

  #   - name: build TS
  #     run: yarn build

  #   - name: build example
  #     run: yarn windows --no-launch --no-deploy --no-packager --logging
  #     working-directory: example

  #   - name: Upload appx
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: Example appx
  #       path: example\windows\AppPackages\example\example_1.0.0.0_Win32_Debug_Test
  #       if-no-files-found: error

  examplenuget:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: yarn install
      run: yarn install

    - name: build TS
      run: yarn build
      
    - name: build ExampleNuget
      run: yarn windows --no-launch --no-deploy --no-packager --logging
      working-directory: examplenuget

    - name: Upload appx
      uses: actions/upload-artifact@v2
      with:
        name: ExampleNuget appx
        path: exampleNuget\windows\AppPackages\exampleNuget\exampleNuget_1.0.0.0_Win32_Debug_Test
        if-no-files-found: error

  package:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2

    - name: setup-msbuild
      uses: microsoft/setup-msbuild@v1

    - name: yarn install
      run: yarn install 

    - name: build TS
      run: yarn build

    - name: npm pack
      run: npm pack
      working-directory: package

    - name: Upload npm package
      uses: actions/upload-artifact@v2
      with:
        name: npm package
        path: package\*.tgz
        if-no-files-found: error

    - name: build Release x64
      run: msbuild /restore /p:RestorePackagesConfig=true package\windows\ReactNativeXaml.sln /p:configuration=Release /p:platform=x64

    - name: Validate size
      shell: powershell
      run: |
        $size = (gci package\windows\x64\Release\ReactNativeXaml\ReactNativeXaml.dll).Length
        $size
        if ($size -gt 1.5MB) {
          throw "DLL is bigger than 1.5MB"
        }

